# Generated by Django 4.0.5 on 2022-07-04 14:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ('customers_app', '0004_alter_databaseuser_age'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='Уровень доступа')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=3, null=True, verbose_name='код')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='страна')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название категории')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории')),
                ('hash_view', models.CharField(blank=True, max_length=256)),
                ('access', models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT,
                                             to='customers_app.accesslevel', verbose_name='Категория доступа')),
                ('parent_category',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='customers_app.division')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='000', max_length=100, verbose_name='код должности')),
                ('name', models.CharField(max_length=100, verbose_name='должность')),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=15, verbose_name='Номер телефона')),
            ],
        ),
        migrations.RemoveField(
            model_name='databaseuser',
            name='age',
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='birthday',
            field=models.DateField(blank=True, null=True, verbose_name='день рождения'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='gender',
            field=models.CharField(blank=True, choices=[('male', 'мужской'), ('female', 'женский')], max_length=7,
                                   verbose_name='пол'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='surname',
            field=models.CharField(blank=True, max_length=40, null=True, verbose_name='отчество'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='type_users',
            field=models.CharField(
                choices=[('natural_person', 'физическое лицо'), ('staff_member', 'штатный сотрудник'),
                         ('freelancer', 'внештатный сотрудник')], max_length=40, null=True,
                verbose_name='тип пользователя'),
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('divisions',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.division',
                                   verbose_name='подразделение')),
                ('job',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.job',
                                   verbose_name='должность')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_id', models.IntegerField(verbose_name='')),
                ('city_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='город')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                              to='customers_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='индекс')),
                ('region', models.CharField(blank=True, max_length=30, null=True, verbose_name='область')),
                ('district', models.CharField(blank=True, max_length=30, null=True, verbose_name='район')),
                ('microdistrict', models.CharField(blank=True, max_length=30, null=True, verbose_name='микрорайон')),
                ('street', models.CharField(blank=True, max_length=60, null=True, verbose_name='улица')),
                ('house', models.CharField(blank=True, max_length=6, null=True, verbose_name='дом')),
                ('apartment', models.CharField(blank=True, max_length=3, null=True, verbose_name='квартира')),
                ('city',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.city',
                                   verbose_name='город')),
                ('country',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.country',
                                   verbose_name='страна')),
            ],
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='access_right',
            field=models.ManyToManyField(default=0, to='customers_app.accesslevel', verbose_name='права доступа'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='customers_app.address'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='corp_phone',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corp',
                                       to='customers_app.phonenumber', verbose_name='корпоративный номер'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='phone',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cell',
                                       to='customers_app.phonenumber', verbose_name='номер телефона'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='works',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='customers_app.work', verbose_name='занятость'),
        ),
    ]
