# Generated by Django 4.1.3 on 2022-11-21 10:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataBaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ref_key', models.CharField(default='', max_length=37, verbose_name='Уникальный номер')),
                ('surname', models.CharField(blank=True, default='', max_length=40, verbose_name='Отчество')),
                ('avatar', models.ImageField(blank=True, upload_to='users_avatars')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('type_users', models.CharField(blank=True, choices=[('natural_person', 'физическое лицо'), ('staff_member', 'штатный сотрудник'), ('freelancer', 'внештатный сотрудник')], default='', max_length=40, verbose_name='Тип пользователя')),
                ('personal_phone', models.CharField(blank=True, default='', max_length=15, verbose_name='Личный номер телефона')),
                ('gender', models.CharField(blank=True, choices=[('male', 'мужской'), ('female', 'женский')], default='', max_length=7, verbose_name='Пол')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='Уровень доступа')),
                ('name', models.CharField(blank=True, default='', max_length=26, verbose_name='')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории')),
            ],
            options={
                'verbose_name': 'Уровень доступа',
                'verbose_name_plural': 'Уровни доступа',
            },
        ),
        migrations.CreateModel(
            name='Citizenships',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Гражданство пользователя',
                'verbose_name_plural': 'Гражданства пользователей',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history', models.DateField(auto_created=True, null=True, verbose_name='Дата создания')),
                ('ref_key', models.CharField(default='', max_length=37, verbose_name='Уникальный номер')),
                ('code', models.CharField(default='', max_length=10, verbose_name='Код подразделения')),
                ('name', models.CharField(default='', max_length=128, verbose_name='Название категории')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории')),
                ('okved', models.CharField(blank=True, default='', max_length=8, verbose_name='Код ОКВЭД2')),
                ('active', models.BooleanField(default=True, verbose_name='Активность')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.division')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения организации',
            },
        ),
        migrations.CreateModel(
            name='HarmfulWorkingConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_key', models.CharField(default='', max_length=37, verbose_name='Уникальный номер')),
                ('code', models.CharField(default='', max_length=5, verbose_name='Код')),
                ('name', models.TextField(verbose_name='Наименование')),
                ('frequency', models.PositiveSmallIntegerField(verbose_name='Периодичность осмотров')),
            ],
            options={
                'verbose_name': 'Вредные условия труда',
                'verbose_name_plural': 'Вредные условия труда',
            },
        ),
        migrations.CreateModel(
            name='IdentityDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_key', models.CharField(default='', max_length=37, verbose_name='Уникальный номер')),
                ('series', models.CharField(default='', max_length=4, verbose_name='Серия')),
                ('number', models.CharField(default='', max_length=6, verbose_name='Номер')),
                ('issued_by_whom', models.CharField(default='', max_length=250, verbose_name='Кем выдан')),
                ('date_of_issue', models.DateField(null=True, verbose_name='Дата выдачи')),
                ('division_code', models.CharField(default='', max_length=7, verbose_name='Код подразделения')),
            ],
            options={
                'verbose_name': 'Паспорт пользователя',
                'verbose_name_plural': 'Паспорта пользователей',
            },
        ),
        migrations.CreateModel(
            name='ViewDocumentsPhysical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_key', models.CharField(default='', max_length=37, verbose_name='Уникальный номер')),
                ('codeMVD', models.CharField(default='', max_length=5, verbose_name='Код МВД')),
                ('codePFR', models.CharField(default='', max_length=5, verbose_name='Код ПФР')),
                ('name', models.TextField(verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Вид документа физического лица',
                'verbose_name_plural': 'Виды документов физических лиц',
            },
        ),
        migrations.CreateModel(
            name='UserAccessMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documents_access_add', models.BooleanField(default=False, verbose_name='Разрешение на создание договора')),
                ('documents_access_edit', models.BooleanField(default=False, verbose_name='Разрешение на редактирование договора')),
                ('documents_access_agreement', models.BooleanField(default=False, verbose_name='Право на публикацию договора')),
                ('contracts_access_add', models.BooleanField(default=False, verbose_name='Разрешение на создание документа')),
                ('contracts_access_edit', models.BooleanField(default=False, verbose_name='Разрешение на редактирование документа')),
                ('contracts_access_agreement', models.BooleanField(default=False, verbose_name='Право на публикацию документа')),
                ('posts_access_add', models.BooleanField(default=False, verbose_name='Разрешение на создание сообщения')),
                ('posts_access_edit', models.BooleanField(default=False, verbose_name='Разрешение на редактирование сообщения')),
                ('posts_access_agreement', models.BooleanField(default=False, verbose_name='Право на публикацию сообщения')),
                ('guide_access_add', models.BooleanField(default=False, verbose_name='Разрешение на создание записи в справочнике')),
                ('guide_access_edit', models.BooleanField(default=False, verbose_name='Разрешение на редактирование записи в справочнике')),
                ('guide_access_agreement', models.BooleanField(default=False, verbose_name='Право на публикацию записи в справочнике')),
                ('contracts_access_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contracts_view', to='customers_app.accesslevel', verbose_name='Уровень доступа к документам')),
                ('documents_access_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents_view', to='customers_app.accesslevel', verbose_name='Уровень доступа к договорам')),
                ('guide_access_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guide_view', to='customers_app.accesslevel', verbose_name='Уровень доступа к справочникам')),
                ('posts_access_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts_view', to='customers_app.accesslevel', verbose_name='Уровень доступа к сообщениям')),
            ],
            options={
                'verbose_name': 'Уровень доступа пользователя',
                'verbose_name_plural': 'Уровни доступа пользователей',
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('post_description', models.TextField(blank=True, default='', verbose_name='Текст поста')),
                ('allowed_placed', models.BooleanField(default=False, verbose_name='Разрешение на публикацию')),
                ('post_divisions', models.ManyToManyField(to='customers_app.division', verbose_name='Подразделения поста')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_key', models.CharField(default='', max_length=37, verbose_name='Уникальный номер')),
                ('code', models.CharField(default='', max_length=5, verbose_name='Код должности')),
                ('name', models.CharField(max_length=200, verbose_name='Должность')),
                ('date_entry', models.DateField(auto_now_add=True, null=True, verbose_name='Дата ввода')),
                ('date_exclusions', models.DateField(auto_now_add=True, null=True, verbose_name='Дата исключения')),
                ('excluded_standard_spelling', models.BooleanField(default=True, verbose_name='Исключена из штатного расписания')),
                ('employment_function', models.CharField(default='', max_length=37, verbose_name='Трудовая функция')),
                ('harmful', models.ManyToManyField(blank=True, to='customers_app.harmfulworkingconditions', verbose_name='Вредные условия труда')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='DataBaseUserWorkProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_employment', models.DateField(blank=True, null=True, verbose_name='Дата приема на работу')),
                ('internal_phone', models.CharField(blank=True, default='', max_length=3, verbose_name='Внутренний номер телефона')),
                ('work_phone', models.CharField(blank=True, default='', max_length=15, verbose_name='Корпоративный номер телефона')),
                ('work_email', models.EmailField(default='', max_length=254, verbose_name='Рабочий email')),
                ('divisions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.division', verbose_name='Подразделение')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.job', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Рабочий профиль пользователя',
                'verbose_name_plural': 'Рабочие профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='DataBaseUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snils', models.CharField(blank=True, default='', max_length=14, verbose_name='СНИЛС')),
                ('oms', models.CharField(blank=True, default='', max_length=24, verbose_name='Полис ОМС')),
                ('inn', models.CharField(blank=True, default='', max_length=12, verbose_name='ИНН')),
                ('citizenship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.citizenships', verbose_name='Гражданство')),
                ('passport', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.identitydocuments', verbose_name='Паспорт')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='Counteragent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_key', models.CharField(default='', max_length=37, verbose_name='Уникальный номер')),
                ('short_name', models.CharField(default='', max_length=150, verbose_name='Наименование')),
                ('full_name', models.CharField(default='', max_length=250, verbose_name='Полное наименование')),
                ('inn', models.CharField(blank=True, default='', max_length=12, verbose_name='ИНН')),
                ('kpp', models.CharField(blank=True, default='', max_length=9, verbose_name='КПП')),
                ('ogrn', models.CharField(blank=True, default='', max_length=13, verbose_name='ОГРН')),
                ('type_counteragent', models.CharField(choices=[('juridical_person', 'юридическое лицо'), ('physical_person', 'физическое лицо'), ('separate_subdivision', 'обособленное подразделение'), ('government_agency', 'государственный орган')], default='', max_length=40, verbose_name='Тип контрагента')),
                ('juridical_address', models.TextField(blank=True, default='', verbose_name='Юридический адрес')),
                ('physical_address', models.TextField(blank=True, default='', verbose_name='Физический адрес')),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, default='', max_length=15, verbose_name='Корпоративный номер телефона')),
                ('base_counteragent', models.BooleanField(default=False, verbose_name='Основная организация')),
                ('accountant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account', to=settings.AUTH_USER_MODEL, verbose_name='Бухгалтер')),
                ('contact_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact', to=settings.AUTH_USER_MODEL, verbose_name='Контактное лицо')),
                ('director', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direct', to=settings.AUTH_USER_MODEL, verbose_name='Директор')),
            ],
            options={
                'verbose_name': 'Контрагент',
                'verbose_name_plural': 'Контрагенты',
            },
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='access_level',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.useraccessmode', verbose_name='Права доступа'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='user_profile',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.databaseuserprofile', verbose_name='Личный профиль пользователя'),
        ),
        migrations.AddField(
            model_name='databaseuser',
            name='user_work_profile',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers_app.databaseuserworkprofile', verbose_name='Рабочий профиль пользователя'),
        ),
    ]
